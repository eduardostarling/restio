trigger:
- master

pool:
  vmImage: 'ubuntu-latest'
strategy:
  matrix:
    Python37:
      python.version: '3.7.4'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install pipenv
    pipenv install --dev
  displayName: 'Install dependencies'

- script: |
    pipenv run test
  displayName: 'Run tests'

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/coverage.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/htmlcov'

- script: |
    pipenv run docs
  displayName: 'Build Documentation'

- script: |
    pipenv run build
  displayName: 'Build Python Wheel'
  continueOnError: False

- task: TwineAuthenticate@1
  inputs:
    pythonUploadServiceConnection: 'pypi-restio'
  #condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

- script: |
    pipenv run publish
  #condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  displayName: "Publish to PyPI"